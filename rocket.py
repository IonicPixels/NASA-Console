# -*- coding: utf-8 -*-

# Import Externals
import time
import pygame
import os
import RPi.GPIO as GPIO

# Activate GPIO
GPIO.setmode(GPIO.BCM)
GPIO.setwarnings(False)
GPIO.setup(18,GPIO.OUT)

# Initialize PyGame
pygame.mixer.pre_init(44100, -16, 2 , 2048)
pygame.init()
pygame.mixer.init()
pygame.mixer.music.load("NASA_countdown_20sec.wav")

# Time Declarations
t = (.75)

clear = lambda: os.system('clear')

time.sleep(0)
clear()

# Block 1
print ('-----------------------------------------------')
print ('------------ Welcome To NASA OS ---------------')
print ('-----------------------------------------------')
print ('')
print ('256k Ram Check...')
time.sleep(1)
print('OK!')
print('')
time.sleep(1)
print ('please wait, Starting systems')
time.sleep(.5)
print ('.')
time.sleep(.5)
print ('.')
time.sleep(.5)
print ('.')
time.sleep(1)
print ('Systems Started!')
GPIO.output(18,GPIO.HIGH) # Initialize RPi GPIO Pin 18, PLC Pulse On (1)
time.sleep(.5)
GPIO.output(18,GPIO.LOW) # Uninitialize RPi GPIO Pin 18, PLC Pulse Off (1)
print ('')
time.sleep(1)
print("Start Preflight Checks? (1) Yes or (2) No\n") # First question prompt
time.sleep(.5)
print ('Auto input: = 1') # Text to signify an automatic input, this is to avoid user input
time.sleep(.5)
clear()

# Block 2
print ('')
print ('Starting Preflight Checks...')
print ('')
time.sleep(t)
print ('T-27 hours and counting...')
time.sleep(t)
print ('    Loading cryogenic reactants into the orbiter fuel cell storage tanks')
print ('')
time.sleep(t)
print ('T-19 hours and holding...')
time.sleep(t)
print ('    External nosecone tank purge')
print ('')
GPIO.output(18,GPIO.HIGH)   # Initialize RPi GPIO Pin 18, PLC Pulse On (2)
time.sleep(t)
GPIO.output(18,GPIO.LOW)    # Uninitilaize RPi GPIO Pin 18, PLC Pulse Off (2)
print ('T-19 hours and counting')
time.sleep(t)
print ('    Filling launch pad sound suppression system water tank')
print ('')
time.sleep(t)
print ('T-11 hours and counting...')
time.sleep(t)
print ('    Activate the orbiter fuel cells')
time.sleep(t)
print ('    Switch the orbiters purge air to gaseous nitrogen')
print ('')
time.sleep(t)
print ('T-3 hours and counting...')
time.sleep(t)
print ('    Checking cockpit switch configurations')
time.sleep(t)
print ('    Initializing air-to-ground communication check')
time.sleep(t)
print ('    Checking for hatch leaks')
time.sleep(.5)
print ('.')
time.sleep(.5)
print ('.')
time.sleep(.5)
print ('.')
time.sleep(.5)
print ('    Systems Passed')
clear()

#Block 3
time.sleep(t)
print ('T-20 MINUTES and counting')
time.sleep(t)
print ('    Completing inertial measurement unit preflight alignments')
time.sleep(t)
print ('    Orbiter onboard computers changed to launch configuration')
print ('')
time.sleep(t)
print ('T-9 MINUTES and counting')
time.sleep(t)
print ('    Starting automatic ground launch sequencer')
time.sleep(t)
print ('    Retracting orbiter access arm')
time.sleep(t)
print ('    Starting auxiliary power units')
time.sleep(t)
print ('    Starting orbiter aerosurface profile test')
time.sleep(.5)
print ('.')
time.sleep(.5)
print ('.')
time.sleep(.5)
print ('.')
time.sleep(t)
print ('    Systems Passed')
clear()

# Block 4
print ('    Retracting gaseous oxygen vent arm')      
time.sleep(t)
print ('    Transfering orbiter power from ground to internal')
time.sleep(t)
print ('    Activating launch pad sound suppression system')
print ('')
time.sleep(t)
print ('    Activating main engine hydrogen burn off system')
print ('')
time.sleep(t)
print ('    Activated main engine hydrogen burn off system')
clear()

# Block 5
print ('.')
time.sleep(.5)
print ('.')
time.sleep(.5)
print ('.')
time.sleep(.5)
print ('.')
time.sleep(.5)
print ('.')
time.sleep(.5)
print ('.')
time.sleep(.5)
clear()

# Block 6
print ('Loading Coordinates...')
time.sleep(1)
clear()

# Block 7
print ('Landing Coordinates:')
time.sleep(t)
print('N_5.0667° W_77.333° ±20^2 mi') # Note: Can cause issues if program isn't set to use UTF-8
time.sleep(1) 
print('')
print ("Number Match?\n (1) Yes or (2) No\n") # Second question prompt
time.sleep(.5)
print('Auto Input = 1') # Text to signify an auto input, to avoid user input
GPIO.output(18,GPIO.HIGH) # Initialize RPi GPIO Pin 18, PLC Pulse On (3)
print ('')
time.sleep(1)
print ('Loading Coordinates')
GPIO.output(18,GPIO.LOW)  #Initialize RPi GPIO Pin 18, PLC Pulse Off (3)
print ('.')
time.sleep(.5)
print ('.')
time.sleep(.5)
print ('.')
time.sleep(.5)
print ('Coordinates Loaded!')
time.sleep(.5)
clear()

# Block 8
GPIO.output(18,GPIO.HIGH) # Initialize RPi GPIO Pin 18, PLC Pulse On (4)
pygame.mixer.music.play() # Start the SFX
print ('')
print ('----Main engine starting----')
time.sleep(1)
GPIO.output(18,GPIO.LOW)  # Uninitialize RPi GPIO Pin 18, PLC Pulse Off (4)
print ('---------Keep Clear!--------')
time.sleep(8.5)
print ('           10')
GPIO.output(18,GPIO.HIGH) # Initialize RPi GPIO Pin 18, PLC Pulse On (5)
time.sleep(1)
print ('            9')
print('Ignition Sequence Start!')
GPIO.output(18,GPIO.LOW) # Uninitialize RPi GPIO Pin 18, PLC Pulse Off (5)
time.sleep(1)
print ('            8')
time.sleep(1)
print ('            7')
time.sleep(1)
print ('            6')
time.sleep(1)
print ('            5')
time.sleep(1)
print ('            4')
time.sleep(1)
print ('            3')
GPIO.output(18,GPIO.HIGH) # Initialize RPi GPIO Pin 18, PLC Pulse On (6) - Launch Pulse 
time.sleep(1)
print ('            2')
GPIO.output(18,GPIO.LOW) # Initialize RPi GPIO Pin 18, PLC Pulse Off (6)
time.sleep(1)
print ('            1')
    
#Activate rocket engine
time.sleep(2)
print ('This is Mission Control, WE HAVE LIFT OFF!')
#leave time for audio
        
time.sleep(.75)

# Print Rocket in terminal text
print ('       !')
print ('       !')
print ('       ^')
print ('      / \ ')
print ('     /___\ ')
print ('    |=   =|')
print ('    |     |')
print ('    |     |')   
print ('    |     |')
print ('    |     |')
print ('    | USA |')
print ('    |     |')
print ('   /|##!##|\ ')
print (' /  |##!##|  \ ')
print ('|  / ^ | ^ \  |')
print ('| /  ( | )  \ |')
print ('|/   ( | )   \|')
print ('    ((   )) ')
print ('   ((  :  )) ')
print ('   ((  :  )) ')
print ('    ((   )) ')
print ('     (( )) ')    
print ('      ( ) ')
print ('       . ')
print ('       . ')
print ('       . ')

time.sleep(25) # Wait for SFX to end
clear()
exit()
# sources: https://www.nasa.gov/mission_pages/shuttle/launch/countdown101.html